const express = require('express');
const router = express.Router();
const db = require('../utils/db');
const authMiddleware = require('../middleware/authMiddleware');
const adminOnly = require('../middleware/adminOnly');

const safe = (v) => v === undefined ? null : v;

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤ –ø–æ client_id
router.get('/', authMiddleware, async (req, res) => {
  const { client_id } = req.query;

  if (!client_id) {
    return res.status(400).json({ message: '–ù–µ –ø–µ—Ä–µ–¥–∞–Ω client_id' });
  }

  try {
    const [rows] = await db.execute(
      'SELECT * FROM client_billing_addresses WHERE client_id = ?',
      [client_id]
    );
    console.log("üì§ billing-addresses ‚Üí client_id =", client_id);
    console.log("üì¶ billing-addresses ‚Üí rows:", rows);
    res.json(rows);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–æ–≤:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});


// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
router.post('/', authMiddleware, adminOnly, async (req, res) => {
  const { client_id, label, formatted_address, postal_code, comment } = req.body;

  if (!client_id || !formatted_address) {
    return res.status(400).json({
      message: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: client_id –∏ formatted_address'
    });
  }

  try {
    const [result] = await db.execute(
      `INSERT INTO client_billing_addresses (
        client_id, label, formatted_address, postal_code, comment
      ) VALUES (?, ?, ?, ?, ?)`,
      [
        safe(client_id),
        safe(label),
        safe(formatted_address),
        safe(postal_code),
        safe(comment)
      ]
    );
    res.status(201).json({ id: result.insertId });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error: err.message });
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
router.put('/:id', authMiddleware, adminOnly, async (req, res) => {
  const { label, formatted_address, postal_code, comment } = req.body;

  try {
    await db.execute(
      `UPDATE client_billing_addresses
       SET label = ?, formatted_address = ?, postal_code = ?, comment = ?
       WHERE id = ?`,
      [
        safe(label),
        safe(formatted_address),
        safe(postal_code),
        safe(comment),
        req.params.id
      ]
    );
    res.json({ message: '–ê–¥—Ä–µ—Å –æ–±–Ω–æ–≤–ª—ë–Ω' });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error: err.message });
  }
});

// –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
router.delete('/:id', authMiddleware, adminOnly, async (req, res) => {
  try {
    await db.execute('DELETE FROM client_billing_addresses WHERE id = ?', [req.params.id]);
    res.json({ message: '–ê–¥—Ä–µ—Å —É–¥–∞–ª—ë–Ω' });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞:', err);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error: err.message });
  }
});

module.exports = router;
